
[gcode_macro _TOOLCHANGER_CONFIGURATION]
variable_raise_toolhead_dist: 5
variable_wait_temperature_delta: 0
variable_use_round_path: 0
variable_safe_y: 160                          # Minimum Y
variable_safe_y_no_tool: 80                   # Minimum Y when toolhead is not attached
variable_close_y: 75                          #  
variable_z_up_down_move: 10                   # used for horizontal move # SC: 14
variable_fast_speed: 30000
variable_fast_speed_z: 5100
variable_parking_speed: 7000
variable_end_parking_speed: 1000
variable_speed_ratio: 1                       # Ratio which affects all phases of tool changing process.
variable_liftbar_safe_offset_on_change: 100   # How far move lieftbar to top after tool change.
variable_force_full_up_move_on_change: 0      # If true=1 liftbar moves full way top after each change.
variable_run_current_x: 0
variable_run_current_y: 0
variable_run_current_z: 0
variable_change_current_x: 1.8
variable_change_current_y: 1.8
variable_change_current_z: 1.8
gcode:  

[toolchanger]
  t_command_restore_axis: ZYX
  # ---------------------------------------------------------------------------
  # params_*: 
    # Extra params to pass to pickup/dropoff gcode. Accessible in the gcode via
    # `toolchanger.params_name`.
    # Also will be copied to any tools for this toolchanger with local values overriding. 
  # params_path_speed: 150 #300
  # Default shaper params
  # params_input_shaper_freq_x: 62.4
  # params_input_shaper_freq_y: 88.6
  # ---------------------------------------------------------------------------
  # save_current_tool: false
    # If set, saves currently selected tool and makes it available for initialize gcode.
  initialize_gcode:
    #  Gcode to run on initialize. Typically used for homing any motors, or reselecting saved tool.
    # DETECT_ACTIVE_TOOL_PROBE
    # _INITIALIZE_FROM_DETECTED_TOOL
    # INITIALIZE_TOOLCHANGER T=0
  initialize_on: manual
    # When this toolchanger gets initialized.
    #  - manual: only when INITIALIZE_TOOLCHANGER is called.
    #  - home: when homing the printer.
    #  - first-use: on first toolchange command.
  
  # ------------------------------------------------------------------------
  before_change_gcode:
  # ------------------------------------------------------------------------
    # dropoff_tool and pickup_tool are in format `tool T1`, `tool T2` etc.
    {% set dropoff_tool_number = dropoff_tool|string|replace('tool T', '') %} # dropoff_tool as 0 1 N
    {% set pickup_tool_number = pickup_tool|string|replace('tool T', '') %}   # pickup_tool as 0 1 N
    {% set restore_position_x = restore_position.X|float if 'X' in restore_position else -1 %}
    {% set restore_position_y = restore_position.Y|float if 'Y' in restore_position else -1 %}
    {% set restore_position_z = restore_position.Z|float if 'Z' in restore_position else -1 %}

    _LTC_BEFORE_CHANGE DT={dropoff_tool_number} PT={pickup_tool_number} X={restore_position_x} Y={restore_position_y} Z={restore_position_z}
  
  # ------------------------------------------------------------------------
  dropoff_gcode:
  # ------------------------------------------------------------------------
    RESPOND TYPE=echo MSG='dropoff_gcode: Dropping off {tool.name}'
    # RESPOND TYPE=echo MSG='Position x:{tool.params_park_x|float} y:{tool.params_park_y|float} z:{tool.params_park_y|float} -> gcode_z_offset:{tool.gcode_z_offset}'

    G90
    LIFTBAR_CHECK_HOMED
    _DROPOFF_RAISE_TOOLHED DT={tool.tool_number}
    _DROPOFF_MOVE_TO_CLOSE_POSITION DT={tool.tool_number}
    _DROPOFF_MOVE_TO_PARK_POSITION DT={tool.tool_number}
    _LTC_CURRENT_ON_CHANGE
    _DROPOFF_MOVE_DOWN_ON_PARK_POSITION DT={tool.tool_number}
    SET_GCODE_VARIABLE MACRO="PRINT_START" VARIABLE=tc_no_tool_attached VALUE=1
    _DROPOFF_MOVE_BACK_TO_SAFE_POSITION DT={tool.tool_number}
  
  # ------------------------------------------------------------------------
  pickup_gcode:
  # ------------------------------------------------------------------------
    RESPOND TYPE=echo MSG='pickup_gcode: Picking up {tool.name}'

    G90 ; go absolute
    LIFTBAR_CHECK_HOMED    
    _LTC_CHECK_CARRIAGE_STATE T={tool.tool_number} S="RELEASED" M="pickup_gcode: Cannot take tool T{tool.tool_number} because it is ALREADY on carriage."
    _LTC_CHECK_DOCKING_STATE T={tool.tool_number} S="PRESSED" M="pickup_gcode: Cannot take tool T{tool.tool_number} because it is not docked."
    _PICKUP_PREHEAT_TOOL PT={tool.tool_number}
    _PICKUP_MOVE_TO_CLOSE_POSITION PT={tool.tool_number}    
    _PICKUP_MOVE_TO_PARK_POSITION PT={tool.tool_number}
    _PICKUP_MOVE_UP_ON_PARK_POSITION PT={tool.tool_number}    
    _LTC_CURRENT_AFTER_CHANGE
    _PICKUP_MOVE_BACK_TO_SAFE_POSITION PT={tool.tool_number}
    SET_GCODE_VARIABLE MACRO="PRINT_START" VARIABLE=tc_no_tool_attached VALUE=0
    _PICKUP_PURGE_TOOLHEAD_IF_NEEDED PT={tool.tool_number}
    _PICKUP_MOVE_BACK_TO_ORIGINAL_POSITION PT={tool.tool_number}

  # ------------------------------------------------------------------------
  after_change_gcode:
  # ------------------------------------------------------------------------
    {action_respond_info("Running `after_change_gcode` macros...")}
    {action_respond_info("Running `after_change_gcode` DT=%s -> PT=%s" % (dropoff_tool, pickup_tool))}
    {action_respond_info("Running `after_change_gcode` DT=%s -> PT=%s" % (dropoff_tool|string|lower, pickup_tool|string|lower))}

    # dropoff_tool and pickup_tool are in format `tool T1`, `tool T2` etc.    
    {% set dropoff_tool_number = dropoff_tool|string|replace('tool T', '') if dropoff_tool|string|lower != "none" else none %} # dropoff_tool as 0 1 N
    {% set pickup_tool_number = pickup_tool|string|replace('tool T', '') if dropoff_tool|string|lower != "none" else none %}   # pickup_tool as 0 1 N
    _LTC_AFTER_CHANGE DT={dropoff_tool_number} PT={pickup_tool_number}

