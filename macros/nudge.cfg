# Nudge was created by Zruncho3d @ github.com/zruncho3d
#
# Set your nudge pin here
[gcode_button nudge_sensor_pin]
pin: ^PG10
press_gcode:
release_gcode:

###########################################################################
# These options usually are fine as they are
[gcode_macro _nudge_variables]
variable_numoftool: [0, 1, 2, 3, 4]
#variable_numoftool: [0, 2]
variable_nudge_resolution: 0.025       # Resolution should be between 0.01 - 0.1
variable_nudge_travel_speed: 120       # 100
variable_nudge_x_move_dist: 6.5
variable_nudge_x_move_back_dist: 3
variable_nudge_y_move_dist: 6.5
variable_nudge_y_move_back_dist: 3
variable_nudge_z_move_dist: 4
variable_nudge_z_move_back_dist: 3
################################################################################

#############################################################################
# These variables are used by btc_nudge. Do not edit these
variable_nudge_last_value: -128
variable_nudge_value_z: -128
variable_nudge_value_x1: -128
variable_nudge_value_x2: -128
variable_nudge_value_y1: -128
variable_nudge_value_y2: -128
variable_nudge_cal_z: -128
variable_nudge_cal_x1: -128
variable_nudge_cal_x2: -128
variable_nudge_cal_y1: -128
variable_nudge_cal_y2: -128
variable_nudge_probe_centerx: 0
variable_nudge_probe_centery: 0
variable_nudge_probe_centerz: 0
variable_nudge_probe_current_centerx: 0
variable_nudge_probe_current_centery: 0
variable_nudge_probe_current_centerz: 0
gcode:

#################################################################################
# Start of btc_nudge
[gcode_macro NUDGE_FIND_TOOL_OFFSETS]
gcode:
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_centerx VALUE={printer.toolhead.position.x}
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_centery VALUE={printer.toolhead.position.y}
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_centerz VALUE={printer.toolhead.position.z}
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerx VALUE={printer.toolhead.position.x}
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centery VALUE={printer.toolhead.position.y}
  SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerz VALUE={printer.toolhead.position.z}
  {% set vars = printer["gcode_macro _nudge_variables"] %}
  {% set numoftool = vars.numoftool %}
  # {% for toolnumber in numoftool %}
  #   M104 S150 T{toolnumber}
  # {% endfor %}

  {% set active_tool_number = printer[printer.toolchanger.tool].tool_number %}
  {% if active_tool_number != 0 %}
    {action_raise_error("ERROR: Please change tool to T0 before start process.")}
  {% endif %}

  LIFTBAR_TO_TOP
  {% for tool in numoftool %}
    {% if tool != 0 %}
      MOVE_TO_CENTER
    {% endif %}

    T{tool}
    LIFTBAR_TO_TOP
    _NUDGE_MOVE_OVER_PROBE

    #M109 T{tool} S150
    {% if tool == 0 %}
      _TOOL_LOCATE_SENSOR T={tool}
    {% else %}
      _NUDGE_FIX_GCODE_OFFSET
      _TOOL_CALIBRATE_TOOL_OFFSET T={tool}
    {% endif %}
    #M104 T{tool} S0
  {% endfor %}
  MOVE_TO_CENTER
  T0

[gcode_macro _NUDGE_MOVE_OVER_PROBE]
gcode:
  {% set vars = printer["gcode_macro _nudge_variables"] %}
  {% set nudge_probe_centerx = vars.nudge_probe_centerx %}
  {% set nudge_probe_centery = vars.nudge_probe_centery %}
  {% set nudge_probe_centerz = vars.nudge_probe_centerz %}
  {% set nudge_travel_speed = vars.nudge_travel_speed * 60 %}
  G90 ; go absolute
  G0 X{nudge_probe_centerx} Y{nudge_probe_centery} Z{nudge_probe_centerz} F{nudge_travel_speed}

[gcode_macro _NUDGE_FIX_GCODE_OFFSET]
gcode:
  {% set tool = printer.toolchanger.tool %}
  {% if tool %}
    {% set tool_x_offset = printer[tool].gcode_x_offset %}
    {% set tool_y_offset = printer[tool].gcode_y_offset %}
    {% set tool_z_offset = printer[tool].gcode_z_offset %}
    SET_GCODE_OFFSET X=0 Y=0 Z=0 MOVE=1
    G91 # go relative
    G0 X{tool_x_offset} Y{tool_y_offset} Z{tool_z_offset} F1000
    M400
    SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerx VALUE={printer.toolhead.position.x}
    SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centery VALUE={printer.toolhead.position.y}
    SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerz VALUE={printer.toolhead.position.z}
  {% endif %}

[gcode_macro _TOOL_CALIBRATE_TOOL_OFFSET]
gcode:
  _TOOL_LOCATE_SENSOR T={params.T} CALIBRATE=True

[gcode_macro _TOOL_LOCATE_SENSOR]
gcode:
  {% set do_calibrate = params.CALIBRATE %}
  {% for thisfind in ["z", "x1", "x2", "y1", "y2"]  %}
    _locate_sensor T={params.T} FINDING={thisfind}
  {% endfor %}
  _prn_res T={params.T} CALIBRATE={do_calibrate}
  G90

[gcode_macro _locate_sensor]
gcode:
  {% set vars = printer["gcode_macro _nudge_variables"] %}
  {% set finding = params.FINDING %}
  {% set nudge_travel_speed = vars.nudge_travel_speed * 60 %}

  G91 ; go relative
  {% if finding == "x1" %}
    G90 ; go absolute
    G0 X{vars.nudge_probe_current_centerx|float - vars.nudge_x_move_dist|float} F{nudge_travel_speed}
    G91 ; go relative
    G0 Z-{vars.nudge_z_move_dist}
  {% elif finding == "x2" %}
    G91 ; go relative
    G0 Z{vars.nudge_z_move_dist} F{nudge_travel_speed}
    G90 ; go absolute
    G0 X{vars.nudge_probe_current_centerx|float + vars.nudge_x_move_dist|float}
    G91 ; go relative
    G0 Z-{vars.nudge_z_move_dist}
  {% elif finding == "y1" %}
    G91 ; go relative
    G0 Z{vars.nudge_z_move_dist} F{nudge_travel_speed}
    G90 ; go absolute
    { action_respond_info("BTC_Nudge: y1 vars.nudge_probe_current_centerx=%.2f" % (vars.nudge_probe_current_centerx)) }
    G0 X{vars.nudge_probe_current_centerx} Y{vars.nudge_probe_current_centery|float + vars.nudge_y_move_dist|float}
    G91 ; go relative
    G0 Z-{vars.nudge_z_move_dist}
  {% elif finding == "y2" %}
    G91 ; go relative
    G0 Z{vars.nudge_z_move_dist} F{nudge_travel_speed}
    G90 ; go absolute
    G0 Y{vars.nudge_probe_current_centery|float - vars.nudge_y_move_dist|float}
    G91 ; go relative
    G0 Z-{vars.nudge_z_move_dist}
  {% endif %}
  M400
  G4 P2000

  {% set nudge_state = printer['gcode_button nudge_sensor_pin'].state %}
  {% if nudge_state != "RELEASED" %}
     {action_raise_error("ERROR: Sensor is not RELEASED after move to %s, stopping." % (finding))}
  {% endif %}

  {% for moves in range(1000) %}
    _do_nudge_move FINDING={finding}
  {% endfor %}

  {% if finding == "z" %}
    {% set move_direction = "Z" + vars.nudge_z_move_back_dist|string %}
  {% elif finding == "x1" %}
    {% set move_direction = "X-" + vars.nudge_x_move_back_dist|string %}
  {% elif finding == "x2" %}
    {% set move_direction = "X" + vars.nudge_x_move_back_dist|string %}
  {% elif finding == "y1" %}
    {% set move_direction = "Y" + vars.nudge_y_move_back_dist|string %}
  {% else %}
    {% set move_direction = "Y-" + vars.nudge_y_move_back_dist|string %}
  {% endif %}
  G91 ; go relative
  G0 {move_direction} F{nudge_travel_speed}
  M400
  G4 P2000

  {% set nudge_state = printer['gcode_button nudge_sensor_pin'].state %}
  {% if nudge_state != "RELEASED" %}
    {action_raise_error("ERROR: Sensor is not RELEASED after back move from %s, stopping." % (finding))}
  {% endif %}

  {% if finding == "y2" %}
    G91 ; go relative
    G0 Z20 F{600}
  {% endif %}

  M400
  _locate_sensor_second T={params.T} FINDING={finding}

[gcode_macro _locate_sensor_second]
gcode:
  { action_respond_info("BTC_Nudge: _locate_sensor_second...") }
  {% set vars = printer["gcode_macro _nudge_variables"] %}
  {% set finding = params.FINDING %}
  {% set thistrigpos = vars.nudge_last_value|float %}
  {% set check_got_base = vars.nudge_value_y2|float %}
  { action_respond_info("BTC_Nudge: %s move, probe made contact at %.2f" % (finding, thistrigpos)) }

  #{% if check_got_base == -128 %}
  {% if params.T|int == 0 %}
    # T0
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_z VALUE={thistrigpos}
    {% elif finding == "x1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_x1 VALUE={thistrigpos}
    {% elif finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_x2 VALUE={thistrigpos}
      {% set vars = printer["gcode_macro _nudge_variables"] %}
      {% set refx_dia = thistrigpos|float - vars.nudge_value_x1|float %}
      {% set refx = refx_dia / 2 + vars.nudge_value_x1|float %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_centerx VALUE={refx}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerx VALUE={refx}
      { action_respond_info("BTC_Nudge: Set X center = %.2f" % (refx)) }
    {% elif finding == "y1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_y1 VALUE={thistrigpos}
    {% elif finding == "y2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_value_y2 VALUE={thistrigpos}
      {% set vars = printer["gcode_macro _nudge_variables"] %}
      {% set refy_dia = vars.nudge_value_y1|float - thistrigpos|float %}
      {% set refy = refy_dia / 2 + thistrigpos|float %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_centery VALUE={refy}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centery VALUE={refy}
      { action_respond_info("BTC_Nudge: Set Y center = %.2f" % (refy)) }
    {% endif %}
  {% else %}
    # next tool
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_z VALUE={thistrigpos}
    {% elif finding == "x1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_x1 VALUE={thistrigpos}
    {% elif finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_x2 VALUE={thistrigpos}
      {% set vars = printer["gcode_macro _nudge_variables"] %}
      {% set calx_dia = thistrigpos|float - vars.nudge_cal_x1|float %}
      {% set calx = calx_dia / 2 + vars.nudge_cal_x1|float %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centerx VALUE={calx}
      { action_respond_info("BTC_Nudge: Set X current-center = %.2f" % (calx)) }
    {% elif finding == "y1" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y1 VALUE={thistrigpos}
    {% elif finding == "y2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y2 VALUE={thistrigpos}
      {% set vars = printer["gcode_macro _nudge_variables"] %}
      {% set caly_dia = vars.nudge_cal_y1|float - thistrigpos|float %}
      {% set caly = caly_dia / 2 + thistrigpos|float %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_probe_current_centery VALUE={caly}
      { action_respond_info("BTC_Nudge: Set Y current-center = %.2f" % (caly)) }
    {% endif %}
  {% endif %}

[gcode_macro _do_nudge_move]
gcode:
  {% set finding = params.FINDING %}
  {% set nudge_state = printer['gcode_button nudge_sensor_pin'].state %}
  {% if nudge_state == "RELEASED" %}
    {% set nudge_speed = printer["gcode_macro _nudge_variables"].nudge_travel_speed * 60 %}
    {% set nudge_resolution = printer["gcode_macro _nudge_variables"].nudge_resolution %}
    {% if finding == "z" %}
      {% set move_direction = "Z-%f" % (nudge_resolution) %}
    {% elif finding == "x1" %}
      {% set move_direction = "X%f" % (nudge_resolution) %}
    {% elif finding == "x2" %}
      {% set move_direction = "X-%f" % (nudge_resolution) %}
    {% elif finding == "y1" %}
      {% set move_direction = "Y-%f" % (nudge_resolution) %}
    {% else %}
      {% set move_direction = "Y%f" % (nudge_resolution) %}
    {% endif %}
    G91 ; go relative
    G0 {move_direction} F{nudge_speed}
    M400
  {% else %}
    {% if finding == "z" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.z}
    {% elif finding == "x1" or finding == "x2" %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.x}
    {% else %}
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_last_value VALUE={printer.toolhead.position.y}
    {% endif %}
  {% endif %}

[gcode_macro _prn_res]
gcode:
  { action_respond_info("BTC_Nudge: _do_nudge_move...") }
  {% set do_calibrate = params.CALIBRATE %}
  {% set vars = printer["gcode_macro _nudge_variables"] %}
  {% set refz = vars.nudge_value_z|float %}
  {% set refx_dia = vars.nudge_value_x2|float - vars.nudge_value_x1|float %}
  {% set refx = refx_dia / 2 + vars.nudge_value_x1|float %}
  {% set refy_dia = vars.nudge_value_y1|float - vars.nudge_value_y2|float %}
  {% set refy = refy_dia / 2 + vars.nudge_value_y2|float %}
  {% if not do_calibrate %}
    { action_respond_info("BTC_Nudge: Edit macro NUDGE_MOVE_OVER_PROBE to update positions of:") }
    { action_respond_info("BTC_Nudge: Z: %.2f - Safe Z" % (refz + 3)) }
    { action_respond_info("BTC_Nudge: X: %.2f (Dia: %.2f) - Calculated center of nozzle" % (refx, refx_dia)) }
    { action_respond_info("BTC_Nudge: Y: %.2f (Dia: %.2f) - Calculated center of nozzle" % (refy, refy_dia)) }
    { action_respond_info("BTC_Nudge: Firmware restart and repeat procedure") }
  {% else %}
    {% set check_got_base = vars.nudge_cal_y2|float %}
    { action_respond_info("BTC_Nudge: ----------------------------------------------------------") }
    { action_respond_info("BTC_Nudge: Positions of base T0:") }
    { action_respond_info("BTC_Nudge: X: %.2f (Dia: %.2f)" % (refx, refx_dia)) }
    { action_respond_info("BTC_Nudge: Y: %.2f (Dia: %.2f)" % (refy, refy_dia)) }
    { action_respond_info("BTC_Nudge: Z: %.2f" % (refz)) }
    { action_respond_info("BTC_Nudge: ----------------------------------------------------------") }
    {% if check_got_base != -128 %}
      {% set calz = vars.nudge_cal_z|float %}
      {% set calx_dia = vars.nudge_cal_x2|float - vars.nudge_cal_x1|float %}
      {% set calx = calx_dia / 2 + vars.nudge_cal_x1|float %}
      {% set caly_dia = vars.nudge_cal_y1|float - vars.nudge_cal_y2|float %}
      {% set caly = caly_dia / 2 + vars.nudge_cal_y2|float %}
      { action_respond_info("BTC_Nudge: Positions of next T%s:" % params.T|string) }
      { action_respond_info("BTC_Nudge: X: %.2f (Dia: %.2f)" % (calx, calx_dia)) }
      { action_respond_info("BTC_Nudge: Y: %.2f (Dia: %.2f)" % (caly, caly_dia)) }
      { action_respond_info("BTC_Nudge: Z: %.2f" % (calz)) }
      # { action_respond_info("BTC_Nudge: ----------------------------------------------------------") }
      # { action_respond_info("BTC_Nudge: Calculated offsets for T%s:" % params.T) }
      # { action_respond_info("gcode_x_offset: %.2f" % (calx - refx)) }
      # { action_respond_info("gcode_y_offset: %.2f" % (caly - refy)) }
      # { action_respond_info("gcode_z_offset: %.2f" % (calz - refz)) }
      {action_respond_info(
        "BTC_Nudge: ---------------------------------------------------------- \n"
        "BTC_Nudge: Calculated offsets for T%s:\n"
        "gcode_x_offset: %.2f \n"
        "gcode_y_offset: %.2f \n"
        "gcode_z_offset: %.2f \n"
        "BTC_Nudge: ---------------------------------------------------------- \n" % (
          params.T, (calx - refx), (caly - refy), (calz - refz)
      ))}
      { action_respond_info("BTC_Nudge: --- End Tool Offset Calibration --------------------------") }
      SET_GCODE_VARIABLE MACRO=_nudge_variables VARIABLE=nudge_cal_y2 VALUE=-128
      SET_TOOL_GCODE_X_OFFSET T={params.T} VALUE={(calx - refx)}
      SET_TOOL_GCODE_Y_OFFSET T={params.T} VALUE={(caly - refy)}
      SET_TOOL_GCODE_Z_OFFSET T={params.T} VALUE={(calz - refz)}
    {% endif %}
  {% endif %}

