[manual_stepper liftbar]
# step_pin: PE2
# dir_pin: PE3
# enable_pin: !PD4
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 40
gear_ratio: 8:1
accel: 1000
velocity: 200
endstop_pin: ^!PG15

[tmc5160 manual_stepper liftbar]
# uart_pin: PE1
# interpolate: true
# run_current: 0.5                      # 0.8   # 1.0
# hold_current: 0.5                     # 0.8   # 1.0
# sense_resistor: 0.110
# stealthchop_threshold: 0
cs_pin: PC7
spi_bus: spi1
# spi_software_miso_pin: PA7
# spi_software_mosi_pin: PA6
# spi_software_sclk_pin: PA5
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0
# diag1_pin: ^!PG6
# driver_SGT: 1

# -------------------------------------------------------------------------
[gcode_macro _LIFTBAR_SET_UN_HOME]
gcode:
  SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=homed VALUE=0
  MANUAL_STEPPER STEPPER=liftbar ENABLE=0

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_HOME]
description: [FORCE<force>]
  Home liftbar
  FORCE= Flag to indicate to home without printer Y homing.
variable_homed: 0
variable_is_in_move: 0
variable_home_pos: 300                    # Max movement for liftbar
variable_position = -1
variable_target_position = -1
variable_nozzle_to_liftbar_offset = 20    # Minimum possible distance from toolheads nozzle beeing in 0 to leftbar beeing in 0 (22.1)
variable_safe_offset = 10                 # Offset from nozzle position to liftbar while changeing.
gcode:
  SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=homed VALUE=0

  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set force = params.FORCE|default(0)|int %}
  {% if ("y" not in printer.toolhead.homed_axes) and (force == 0) %}
    G28 Y
  {% endif %}

  {% if ("y" in printer.toolhead.homed_axes) %}
    {% set cur_y = printer.toolhead.position[1]|float %}
    {% if cur_y < printer["gcode_macro _TOOLCHANGER_CONFIGURATION"].safe_y %}
      MOVE_TO_CHANGE_SAFE_POSITION MOVE_X=0
    {% endif %}
  {% endif %}

  MANUAL_STEPPER STEPPER=liftbar ENABLE=1 SET_POSITION=0
  MANUAL_STEPPER STEPPER=liftbar MOVE={printer["gcode_macro LIFTBAR_HOME"].home_pos|float + 10} SPEED=20 SYNC={params.SYNC if 'SYNC' in params else 1} STOP_ON_ENDSTOP=1
  MANUAL_STEPPER STEPPER=liftbar SET_POSITION={printer["gcode_macro LIFTBAR_HOME"].home_pos|float}
  SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=homed VALUE=1
  SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=position VALUE={printer["gcode_macro LIFTBAR_HOME"].home_pos|float}

  LIFTBAR_MOVE Z={printer["gcode_macro LIFTBAR_HOME"].home_pos|float - 10}

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_CHECK_HOMED]
gcode:
  {% if (not printer["gcode_macro _LTC_PAUSE"].is_ltc_paused) %}
    {% set liftbar_homed = printer["gcode_macro LIFTBAR_HOME"].homed|default(0)|int %}
    {% if (liftbar_homed != 1) %}
      {action_respond_info("Liftbar was not homed. Home lieftbar first.")}
      _LTC_PAUSE
    {% endif %}
  {% endif %}

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_TO_TOP]
gcode:
  LIFTBAR_MOVE Z=0 F={(params.F|float) if 'F' in params else 4000} SYNC={params.SYNC if 'SYNC' in params else 1}

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_TO_TOP_ASYNC]
gcode:
  {% set cur_z = printer.toolhead.position[2]|float %}
  {% set liftbar_position = printer["gcode_macro LIFTBAR_HOME"].position %}
  {% set liftbar_max_position = printer["gcode_macro LIFTBAR_HOME"].home_pos %}
  {% set sync_heigh = [liftbar_max_position - 200 - cur_z, 0]|max %}

  {% if (liftbar_position > sync_heigh) %}
      LIFTBAR_MOVE Z={sync_heigh} SYNC=1
  {% endif %}
  LIFTBAR_MOVE SYNC=1
  LIFTBAR_TO_TOP SYNC=0

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_TO_BOTTOM]
gcode:
  {% set max_position = printer["gcode_macro LIFTBAR_HOME"].home_pos|float %}
  LIFTBAR_MOVE Z={max_position} F={(params.F|float) if 'F' in params else 4000} SYNC={params.SYNC if 'SYNC' in params else 1}

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_MOVE]
gcode:
  {% set max_position = printer["gcode_macro LIFTBAR_HOME"].home_pos|float %}
  {% if printer["gcode_macro LIFTBAR_HOME"].homed %}
    {% if 'Z' not in params %}
      MANUAL_STEPPER STEPPER=liftbar SYNC={params.SYNC if 'SYNC' in params else 1}
    {% else %}
      {% set new_position = params.Z|float %}
      {% if (new_position >= 0) and (new_position <= max_position) %}
        {% set cur_y = printer.toolhead.position[1]|float %}
        {% set safe_y = printer["gcode_macro _TOOLCHANGER_CONFIGURATION"].safe_y|float %}
        {% set liftbar_position = printer["gcode_macro LIFTBAR_HOME"].position %}
        {% set liftbar_max_position = printer["gcode_macro LIFTBAR_HOME"].home_pos %}
        # @TODO: Check direction.
        {% if (cur_y < safe_y - 5) and (new_position > liftbar_position ) %}
          {action_raise_error("ERROR: Toolhead is not in safe position. Cannot move liftbar to down.")}
        {% else %}
          SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=is_in_move VALUE=1
          SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=target_position VALUE={new_position}
          MANUAL_STEPPER STEPPER=liftbar MOVE={new_position} SPEED={(params.F|float)/60.0 if 'F' in params else 66} SYNC={params.SYNC if 'SYNC' in params else 1} ACCEL=1000
          SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=position VALUE={new_position}
          SET_GCODE_VARIABLE MACRO=LIFTBAR_HOME VARIABLE=is_in_move VALUE=0
        {% endif %}
      {% else %}
        RESPOND TYPE=echo MSG='Cannot move liftbar, out of range.'
      {% endif %}
    {% endif %}
  {% else %}
      RESPOND TYPE=echo MSG='Home liftbar before any move. Run LIFTBAR_HOME.'
  {% endif %}

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_ECHO_POSITION]
gcode:
  RESPOND TYPE=echo MSG='Liftbar current position: {printer["gcode_macro LIFTBAR_HOME"].position|default(-1)|float}'

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_MOVE_TO_CHANGE_POSITION]
description: [Z<toolhead_z_position>] [DT<dropoff_tool_number>] [PT<pickup_tool_number>] [SYNC<sync_move>] [O<offset_on_change>]
  Moves liftbar to position where change should happen.
  Z= Desired Z position of toolhead, default is current position.
  DT= Dropoff tool (e.g. 0, 1, ...)
  PT= Pickup tool (e.g. 0, 1, ...)
  SYNC= Sync liftbar move or not (0 or 1), default 1
  O= Offset on changeing, raise liftbar after change
gcode:
  {% if (not params.Z is defined) %}
    {action_raise_error("ERROR: Z position is not specified or incorrect.")}
  {% endif %}
  {% if (not params.DT is defined) or (not printer['tool T' + params.DT|string]) %}
    {action_raise_error("ERROR: Dropoff tool is not specified or incorrect.")}
  {% endif %}
  {% if (not params.PT is defined) or (not printer['tool T' + params.PT|string]) %}
    {action_raise_error("ERROR: Pickup tool is not specified or incorrect.")}
  {% endif %}

  LIFTBAR_CHECK_HOMED

  {% set cur_z = params.Z|float %}
  {% set dropoff_tool_park_z = printer['tool T' + params.DT|string].params_park_z|float %}
  {% set pickup_tool_park_z = printer['tool T' + params.PT|string].params_park_z|float %}
  {% set sync_move = params.SYNC|default(1)|int %}
  {action_respond_info("LIFTBAR_MOVE_TO_CHANGE_POSITION: Asked liftbar to move: "
    "cur_z=%.2f dt=%s pt=%s "
    "dropoff_tool_park_z=%.2f "
    "pickup_tool_park_z=%.2f "
    "sync_move=%s" % (
    cur_z, params.DT, params.PT, dropoff_tool_park_z, pickup_tool_park_z, sync_move
  ))}

  # -----------------------------------------------------------------
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
  {% set liftbar_z = printer["gcode_macro LIFTBAR_HOME"].position|float|default(-1) %}
  {% set liftbar_max_z = printer["gcode_macro LIFTBAR_HOME"].home_pos|float %}
  {% set liftbar_safe_offset = printer["gcode_macro LIFTBAR_HOME"].safe_offset|float %}
  {% set on_change_offset = params.O|float if (params.O is defined) else 0 %}

  # Calculated liftbar position.
  {% set cur_z = [cur_z, max_z]|min %}    # the same as in `dropoff_gcode`
  {% set min_tool_park_z = [dropoff_tool_park_z, pickup_tool_park_z]|min %}
  {% set desired_liftbar_z = [liftbar_max_z - cur_z + min_tool_park_z, liftbar_max_z]|min %}
  {% if desired_liftbar_z < 0 %}
    {action_raise_error("ERROR: Liftbar desired z is out of range, asked {desired_liftbar_z}.")}
  {% endif %}
  {% set target_liftbar_z = [desired_liftbar_z - liftbar_safe_offset - on_change_offset, 0]|max %}
  # -----------------------------------------------------------------

  {action_respond_info("LIFTBAR_MOVE_TO_CHANGE_POSITION: Moving liftbar to position "
      "z=%.2f sync_move=%s" % (
      target_liftbar_z, sync_move
  ))}
  LIFTBAR_MOVE SYNC=1                         # Wait until other movements are done.
  LIFTBAR_MOVE Z={target_liftbar_z} SYNC={sync_move}
  # -----------------------------------------------------------------

# -------------------------------------------------------------------------
[gcode_macro LIFTBAR_LAYER_CHANGE]
description: Moves liftbar up away from currnt print layer, if necessary
gcode:
  LIFTBAR_CHECK_HOMED

  {% if (printer.toolhead.homed_axes == "xyz") and (printer.toolchanger.tool) %}
    {% set force_full_up_move_on_change = printer["gcode_macro _TOOLCHANGER_CONFIGURATION"].force_full_up_move_on_change %}
    {% set cur_z = params.Z if (params.Z is defined) else printer.toolhead.position[2]|float %}
    {% set tool_number = printer[printer.toolchanger.tool].tool_number|int %}
    {% set on_change_offset = printer["gcode_macro _TOOLCHANGER_CONFIGURATION"].liftbar_safe_offset_on_change|float %}

    {% if (force_full_up_move_on_change == 1) %}
      LIFTBAR_TO_TOP SYNC=0
    {% else %}
      # LIFTBAR_MOVE Z={target_liftbar_z} SYNC=0
      LIFTBAR_MOVE_TO_CHANGE_POSITION Z={cur_z} DT={tool_number} PT={tool_number} SYNC=0 O={on_change_offset}
    {% endif %}
  {% else %}
    LIFTBAR_TO_TOP SYNC=0
  {% endif %}
