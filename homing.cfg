[homing_override]
axes: xyz
gcode:
  {% set carriage_state = printer['gcode_button carriagesense_t0'].state %}
  {% set dock_state = printer['gcode_button docksense_t0'].state %}
  # PRESSED RELEASED
  {% if (carriage_state == "RELEASED") or (dock_state == "PRESSED") %}
    { action_raise_error("ERROR: Probe tool (T0) is not attached to the carriage. Not able to home.") }
  {% endif %}

  TTC_INITIALIZE_TOOLCHANGER T=0

  {% for tool_nr in printer.toolchanger.tool_numbers %}
    {% set tool_name = "T" ~ (tool_nr|string) %}
    SET_GCODE_VARIABLE MACRO={tool_name} VARIABLE=color VALUE="''"
  {% endfor %}
  SET_GCODE_VARIABLE MACRO="T0" VARIABLE="color" VALUE="'c44'"

  SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  {% set home_y_only = 'X' not in params and 'Y' in params and 'Z' not in params %}

  {% if not home_y_only %}
    {% if printer["gcode_macro LIFTBAR_HOME"].homed == 0 %}
      LIFTBAR_HOME
    {% endif %}
    LIFTBAR_TO_TOP
  {% endif %}

  # {% if home_all %}
    SET_KINEMATIC_POSITION Z=0
    G91                 # go relative mode
    G1 Z10 F1200        # up Z by 10mm for safe move
    G90                 # go absolute mode
  # {% endif %}

  {% if home_all or 'Y' in params %}
    _SENSORLESS_HOME_Y
  {% endif %}

  {% if home_all or 'X' in params %}
    _SENSORLESS_HOME_X          # move 20mm away from max position.
  {% endif %}

  {% if home_all or 'Z' in params %}
    {% set random_x = (range(-50, 50) | random) / 10 %}
    {% set random_y = (range(-50, 50) | random) / 10 %}

    G90                         # go absolute mode
    G0 X175.0 Y175.0 F12000
    G28 Z

    G90                         # go absolute mode
    G0 Z10 F1000

    # _ADJUST_Z_HOME_FOR_TOOL_OFFSET
  {% endif %}

  # _APPLY_ACTIVE_TOOL_GCODE_OFFSETS
  M400

# -------------------------------------------------------------------------
[gcode_macro _CG28]
description: Homing only if necessary
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

# -------------------------------------------------------------------------
[gcode_macro _SENSORLESS_HOME_X]
gcode:
    # Home
    # {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    # {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 1.4 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}
    {% set HOME_ACCEL = 1000 %}
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL}

    G28 X0
    G91
    G1 X-10 F1200
    G4 P2000

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}

# -------------------------------------------------------------------------
[gcode_macro _SENSORLESS_HOME_Y]
gcode:
    # {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    # {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 1.4 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    {% set RUN_ACCEL = printer.configfile.settings['printer'].max_accel|int %}
    {% set HOME_ACCEL = 1000 %}
    SET_VELOCITY_LIMIT ACCEL={HOME_ACCEL}

    G28 Y0
    G91
    G1 Y-20 F1200
    G4 P2000        # Wait just a secondâ€¦ (give StallGuard registers time to clear)

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    SET_VELOCITY_LIMIT ACCEL={RUN_ACCEL}

# -------------------------------------------------------------------------
; Depending on the selected tool at the time of homing, the physical Z endstop position is offset.
; This corrects for that using current tool offset.
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
gcode:
      G90 # go absolute mode
      G0 Z10 F1000
      {% set tool = printer.toolchanger.tool %}
      {% if tool %}
        {% set tool_z_offset = printer[tool].gcode_z_offset %}
        {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
        SET_KINEMATIC_POSITION Z={10.0 + tool_z_offset|float + probe_z_offset|float}
        RESPOND TYPE=echo MSG='Adjusting Z-home position for tool {tool}...'
        RESPOND TYPE=echo MSG='    {tool}: gcode_z_offset={gcode_z_offset}, z_offset={probe_z_offset}'
      {% endif %}

# -------------------------------------------------------------------------
[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    ; Apply gcode offsets
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
      SET_GCODE_OFFSET X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}
      RESPOND TYPE=echo MSG='Setting gcode_z_offset for tool {tool}, X={printer[tool].gcode_x_offset} Y={printer[tool].gcode_y_offset} Z={printer[tool].gcode_z_offset}'
    {% endif %}

# -------------------------------------------------------------------------
[gcode_macro TOOL_BED_MESH_CALIBRATE]
gcode:
      {% set tool_z_offset = printer[printer.toolchanger.tool].gcode_z_offset %}
      G90 ; absolute mode
      G0 Z10 F1000
      # Bed mesh knows about the probe offset, but not about the tool offset.
      SET_KINEMATIC_POSITION Z={10.0 - tool_z_offset|default(0)|float}
      BED_MESH_CALIBRATE
      G0 Z10 F1000
      SET_KINEMATIC_POSITION Z={10.0 + tool_z_offset|default(0)|float}

# -------------------------------------------------------------------------
[gcode_macro MOVE_DOWN]
gcode:
  G0 X250 Y250 Z10 F4500

# -------------------------------------------------------------------------
# [gcode_macro QGL]
# gcode:
#   QUAD_GANTRY_LEVEL
#   MOVE_TO_PROBE_REMOVE_GCODE_OFFSET
#   TOOL_LOCATE_SENSOR
#   SET_KINEMATIC_POSITION X=349.640625 Y=12.571875
#   MOVE_TO_PROBE_RESTORE_GCODE_OFFSET

# -------------------------------------------------------------------------
[gcode_macro HOME_ALL]
gcode:
  {% set axis_maximum_x = printer.toolhead.axis_maximum.x %}
  {% set axis_maximum_y = printer.toolhead.axis_maximum.y %}
  G28
  LIFTBAR_TO_TOP
  QUAD_GANTRY_LEVEL
  G90 ; go absolute
  G0 X{axis_maximum_x-20} Y{axis_maximum_y-20} F30000
  G0 Z10 F3000
  G28
  MOVE_TO_CENTER